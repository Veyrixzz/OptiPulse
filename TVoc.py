# meta developer: @OptiPulseMod

from .. import loader, utils
from pydub import AudioSegment
import requests, os

class TVoc(loader.Module):
    strings = {"name": "TVoc"}

    async def client_ready(self, client, db):
        self.db = db
        self.voice = db.get("TVoc", "voice", "Olga")
        self.key = os.getenv("0ef1358805f24629a3ee6b87f3414f26")

    async def tvoccmd(self, message):
        """–û–∑–≤—É—á–∏–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç –≥–æ–ª–æ—Å–æ–º ‚Äî .tvoc <—Ç–µ–∫—Å—Ç>"""
        text = utils.get_args_raw(message)
        if not text:
            await message.edit("üí¨ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: `.tvoc –ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!`")
            return
        if not self.key:
            await message.edit("‚ùå VoiceRSS API-–∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è `VOICERSS_API_KEY`.")
            return

        await message.edit(f"üé§ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ—á–∏ (–≥–æ–ª–æ—Å: {self.voice})...")

        params = {
            "key": self.key,
            "hl": "ru-ru",
            "v": self.voice,
            "r": "0",
            "c": "MP3",
            "f": "8khz_8bit_mono",
            "src": text
        }

        try:
            r = requests.get("https://api.voicerss.org/", params=params, timeout=30)
            if r.status_code != 200 or r.content.startswith(b"ERROR"):
                await message.edit("‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ—á–∏. –ü—Ä–æ–≤–µ—Ä—å API-–∫–ª—é—á –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã.")
                return
            mp3 = "/tmp/tvoc.mp3"
            ogg = "/tmp/tvoc.ogg"
            with open(mp3, "wb") as f: f.write(r.content)
            AudioSegment.from_mp3(mp3).export(ogg, format="ogg", codec="libopus")
            await message.client.send_file(message.chat_id, ogg, voice_note=True,
                                           reply_to=message.reply_to_msg_id)
            await message.delete()
            os.remove(mp3)
            os.remove(ogg)
        except Exception as e:
            await message.edit(f"‚ùå –û—à–∏–±–∫–∞: {e}")

    async def setvoicecmd(self, message):
        """–ú–µ–Ω—è–µ—Ç –≥–æ–ª–æ—Å ‚Äî .setvoice <–∏–º—è>"""
        name = utils.get_args_raw(message).strip()
        avail = ["Olga", "Marina"]
        if not name:
            await message.edit(f"üéô –¢–µ–∫—É—â–∏–π –≥–æ–ª–æ—Å: {self.voice}\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –≥–æ–ª–æ—Å–∞: {', '.join(avail)}")
            return
        if name not in avail:
            await message.edit(f"‚ùå –ì–æ–ª–æ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω. –î–æ—Å—Ç—É–ø–Ω—ã–µ: {', '.join(avail)}")
            return
        self.db.set("TVoc", "voice", name)
        self.voice = name
        await message.edit(f"‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≥–æ–ª–æ—Å: {name}")

    async def voicescmd(self, message):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≥–æ–ª–æ—Å–æ–≤ ‚Äî .voices"""
        await message.edit("üéß –î–æ—Å—Ç—É–ø–Ω—ã–µ –≥–æ–ª–æ—Å–∞:\n- Olga (–∂–µ–Ω—Å–∫–∏–π, —Å—Ç–∞–Ω–¥–∞—Ä—Ç)\n- Marina (–∂–µ–Ω—Å–∫–∏–π, –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π)\n–°–º–µ–Ω–∏—Ç—å –≥–æ–ª–æ—Å: `.setvoice <–∏–º—è>`")
