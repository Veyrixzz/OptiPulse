# meta developer: @OptiPulseMod



from .. import loader, utils
import edge_tts
import asyncio
import os
from tempfile import NamedTemporaryFile

@loader.tds
class TVocEdge(loader.Module):
    """–û–∑–≤—É—á–∫–∞ —Ç–µ–∫—Å—Ç–∞."""
    strings = {
        "name": "TVoc",
        "no_text": "‚ùå –£–∫–∞–∂–∏ —Ç–µ–∫—Å—Ç –¥–ª—è –æ–∑–≤—É—á–∫–∏.",
        "error": "‚ùå –û—à–∏–±–∫–∞ TTS: ",
        "voices": "üé§ –ü—Ä–∏–º–µ—Ä—ã –≥–æ–ª–æ—Å–æ–≤:\n- ru-RU-SvetlanaNeural (–∂–µ–Ω—Å–∫–∏–π)\n- ru-RU-DmitryNeural (–º—É–∂—Å–∫–æ–π)",
        "setvoice": "‚úÖ –ì–æ–ª–æ—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ",
    }

    def __init__(self):
        self.voice = "ru-RU-SvetlanaNeural"

    async def tvoccmd(self, message):
        """–û–∑–≤—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç: .tvoc <—Ç–µ–∫—Å—Ç>"""
        text = utils.get_args_raw(message)
        if not text:
            return await utils.answer(message, self.strings("no_text"))

        path = None
        try:
            with NamedTemporaryFile(suffix=".mp3", delete=False) as f:
                path = f.name

            communicate = edge_tts.Communicate(text=text, voice=self.voice)
            await communicate.save(path)

            await message.client.send_file(
                message.chat_id,
                file=path,
                voice_note=True,
                reply_to=message.reply_to_msg_id
            )
        except Exception as e:
            return await utils.answer(message, self.strings("error") + str(e))
        finally:
            if path and os.path.exists(path):
                os.remove(path)
            await message.delete()

    async def tvocvoicecmd(self, message):
        """–ò–∑–º–µ–Ω–∏—Ç—å –≥–æ–ª–æ—Å: .tvocvoice <–∏–º—è>"""
        voice = utils.get_args_raw(message).strip()
        if voice:
            self.voice = voice
            await utils.answer(message, self.strings("setvoice") + voice)
        else:
            await utils.answer(message, self.strings("voices"))

    async def tvocvoicescmd(self, message):
        """–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä—ã –≥–æ–ª–æ—Å–æ–≤: .tvocvoices"""
        await utils.answer(message, self.strings("voices"))
