# meta developer: @OptiPulseMod

from .. import loader, utils
from pydub import AudioSegment
import requests
import os

class TVoc(loader.Module):
    strings = {"name": "TVoc"}

    async def client_ready(self, client, db):
        self.db = db
        self.voice = self.db.get("TVoc", "voice", "kseniya")

    async def tvoccmd(self, message):
        """–û–∑–≤—É—á–∏–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç –≥–æ–ª–æ—Å–æ–º. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .tvoc <—Ç–µ–∫—Å—Ç>"""
        text = utils.get_args_raw(message)
        if not text:
            await message.edit("üí¨ –í–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç –¥–ª—è –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è.")
            return

        await message.edit(f"üé§ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è... (–≥–æ–ª–æ—Å: {self.voice})")

        tts_url = "https://api.v6.anon-tts.ru/generate"

        payload = {
            "text": text,
            "voice": self.voice,
            "lang": "ru"
        }

        try:
            response = requests.post(tts_url, json=payload, timeout=30)
            if response.status_code != 200 or "url" not in response.json():
                await message.edit("‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ—á–∏.")
                return

            audio_url = response.json()["url"]
            audio_data = requests.get(audio_url)

            mp3_path = "/tmp/tvoc.mp3"
            ogg_path = "/tmp/tvoc.ogg"

            with open(mp3_path, "wb") as f:
                f.write(audio_data.content)

            sound = AudioSegment.from_mp3(mp3_path)
            sound.export(ogg_path, format="ogg", codec="libopus")

            await message.client.send_file(
                message.chat_id,
                ogg_path,
                voice_note=True,
                reply_to=message.reply_to_msg_id
            )
            await message.delete()

            os.remove(mp3_path)
            os.remove(ogg_path)

        except Exception as e:
            await message.edit(f"‚ùå –û—à–∏–±–∫–∞: {e}")

    async def setvoicecmd(self, message):
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≥–æ–ª–æ—Å. –ü—Ä–∏–º–µ—Ä: .setvoice kseniya"""
        args = utils.get_args_raw(message).strip()
        valid_voices = ["kseniya", "xenia", "baya", "aidar", "zahar", "jane", "oksana", "alyss"]

        if not args:
            await message.edit(f"üéô –¢–µ–∫—É—â–∏–π –≥–æ–ª–æ—Å: {self.voice}\n–î–æ—Å—Ç—É–ø–Ω—ã–µ: {', '.join(valid_voices)}")
            return

        if args not in valid_voices:
            await message.edit(f"‚ùå –ì–æ–ª–æ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω. –î–æ—Å—Ç—É–ø–Ω—ã–µ: {', '.join(valid_voices)}")
            return

        self.db.set("TVoc", "voice", args)
        self.voice = args
        await message.edit(f"‚úÖ –ì–æ–ª–æ—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {args}")
